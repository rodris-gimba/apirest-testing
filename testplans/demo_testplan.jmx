<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="demo_testplan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Defined variables by user" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="thread_number" elementType="Argument">
            <stringProp name="Argument.name">thread_number</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">1</stringProp>
        <stringProp name="CounterConfig.end">110</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">counter</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Default value to HTTP request" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${__P(server,1)}</stringProp>
        <stringProp name="HTTPSampler.port">8000</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Token fb39256ab93636abd9f45e101bfbddc89fc763b7</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration mysql" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">product_db</stringProp>
        <stringProp name="dbUrl">${__P(mysqlserver,1)}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">J2e6LuYgUm</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">root</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1483957513000</longProp>
        <longProp name="ThreadGroup.end_time">1483957513000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[01-25]-Create new asset" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-01-Create new asset - all parameters right" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset all parameters right" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.inputMap = new java.util.HashMap();

bsh.shared.dbMap = new java.util.HashMap();



bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.mihostname.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;18-05-2017 15:15)}&quot;);
bsh.shared.state_date = new String(&quot;18-05-2017 15:15&quot;);
bsh.shared.os = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(2);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);


bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);

/*
bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;${__BeanShell(bsh.shared.hostname&quot;);
bsh.shared.inputMap.put(&quot;address&quot;, &quot;${__BeanShell(bsh.shared.address)}&quot;);
bsh.shared.inputMap.put(&quot;state_machine&quot;, &quot;3&quot;);
bsh.shared.inputMap.put(&quot;os&quot;, &quot;${__BeanShell(bsh.shared.os)}&quot;);
bsh.shared.inputMap.put(&quot;state&quot;, &quot;3&quot;);
*/</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-01][High]-Select last id asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Create new asset all parameters right" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, hostname, address, os_id, state, state_machine from vats_asset_asset where id = ${last_id_asset_1} + 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor DateTime" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

String string = &quot;${registry_datetime_db_1}&quot;;
//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + string);


DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;);
Date date = format.parse(string);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm&quot;);
javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + sdf.format(date));

//string = sdf.format(date);

//javax.swing.JOptionPane.showMessageDialog(null,&quot;time=&quot; + format.parse(string));


//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=${string}&quot;);

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">

//if (&quot;${__BeanShell(bsh.shared.hostname)}&quot; == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
if (bsh.shared.inputMap.get(&quot;hostname&quot;) == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.hostname)} con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot; con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;);
 print(FailureMessage);
}


if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-777862041">&quot;os&quot;:${os_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-02-Create new asset - param limit wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset limit param wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.limit = new String(&quot;a&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-02][Low]-API Product Create new asset param limit wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-549382010">error: el campo limit con valor &quot;${__BeanShell(bsh.shared.limit)}&quot; no es valido</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-03-Create new asset - param page wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset page param wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new String(&quot;a&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-03][Low]-API Product Create new asset param page wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1700648660">error: el campo limit con valor &quot;${__BeanShell(bsh.shared.page)}&quot; no es valido</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-04-Create new asset - param order_by wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset order_by param wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.page = new Integer(1);
bsh.shared.order_by = new Integer(2);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-04][Low]-API Product Create new asset param order_by wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:${__BeanShell(bsh.shared.order_by)},&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-05-Create new asset - same param of query wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset address param of query wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.address = new Boolean(true);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-05][Low]-API Product Create new asset same param of query wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:${__BeanShell(bsh.shared.address)},&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="304340479">error: el campo limit con valor &quot;${__BeanShell(bsh.shared.address)}&quot; no es valido</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-06-Create new asset - param cpe wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset param cpe wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.cpe = new Boolean(false);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-06][Low]-API Product Create new asset param cpe wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-07-Create new asset - param tag wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset param tag wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.cpe = new Integer(2);
bsh.shared.tag = new Boolean(true);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-07][Low]-API Product Create new asset param tag wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-08-Create new asset - param network wrong" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset param network wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.tag = new Integer(20);
bsh.shared.network = new Boolean(false);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-08][Low]-API Product Create new asset - param network wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1806559289">error: el campo limit con valor &quot;${__BeanShell(bsh.shared.network)}&quot; no es valido</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-09-Create new asset - param alive wrong" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset param alive wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.network = new Integer(1);
bsh.shared.alive = new String(&quot;Hasta_luego&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-09][Low]-API Product Create new asset param alive wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:${__BeanShell(bsh.shared.with_tags)}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="375325080">error: el campo limit con valor &quot;${__BeanShell(bsh.shared.alive)}&quot; no es valido</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-10-Create new asset - param with_tags wrong" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset param with_tags wrong" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new String(&quot;Helloooowww&quot;);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-10][Low]-API Product Create new asset param with_tags wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:${__BeanShell(bsh.shared.limit)},&quot;page&quot;:${__BeanShell(bsh.shared.page)},&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:${__BeanShell(bsh.shared.cpe)},&quot;tag&quot;:${__BeanShell(bsh.shared.tag)},&quot;network&quot;:${__BeanShell(bsh.shared.network)},&quot;alive&quot;:${__BeanShell(bsh.shared.alive)},&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-618756803">error: el campo limit con valor &quot;${__BeanShell(bsh.shared.with_tags)}&quot; no es valido</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-11-Create new asset - without param limit" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset without param limit" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;


bsh.shared.with_tags = new Boolean(true);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-11][Low]-API Product Create new asset without param limit" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1276644727">error: peticion sin parametro &quot;limit&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-12-Create new asset - without param page" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-12][Low]-API Product Create new asset without param page" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="183179203">error: peticion sin parametro &quot;page&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-13-Create new asset - without param order_by" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-13][Low]-API Product Create new asset without param order_by" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1546363254">error: peticion sin parametro &quot;order_by&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-14-Create new asset - without any param of query" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-14][Low]-API Product Create new asset without any param of query" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="406591582">error: peticion sin parametro &quot;address&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-15-Create new asset - without param cpe" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-15][Low]-API Product Create new asset without param cpe" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1668103994">error: peticion sin parametro &quot;cpe&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-16-Create new asset - without param tag" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-16][Low]-API Product Create new asset without param tag" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1668596088">error: peticion sin parametro &quot;tag&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-17-Create new asset - without param network" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-17][Low]-API Product Create new asset without param network" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1356193436">error: peticion sin parametro &quot;network&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-18-Create new asset - without param alive" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-18][Low]-API Product Create new asset - without param alive" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="964387493">error: peticion sin parametro &quot;alive&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-19-Create new asset - without param with_tags" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-19][Low]-API Product Create new asset without param with_tags" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1075560480">error: peticion sin parametro &quot;with_tags&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-20-Create new asset - param order_by = hostname" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.order_by = new String(&quot;hostname&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-20][Low]-Select last id asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Create new asset param order_by = hostname" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, hostname, address, os_id, state, state_machine from vats_asset_asset where id = ${last_id_asset_1} + 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor DateTime" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

String string = &quot;${registry_datetime_db_1}&quot;;
//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + string);


DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;);
Date date = format.parse(string);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm&quot;);
javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + sdf.format(date));

//string = sdf.format(date);

//javax.swing.JOptionPane.showMessageDialog(null,&quot;time=&quot; + format.parse(string));


//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=${string}&quot;);

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">

//if (&quot;${__BeanShell(bsh.shared.hostname)}&quot; == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
if (bsh.shared.inputMap.get(&quot;hostname&quot;) == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.hostname)} con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot; con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;);
 print(FailureMessage);
}


if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-777862041">&quot;os&quot;:${os_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-21-Create new asset - param order_by = address" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.order_by = new String(&quot;address&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-21][Low]-Select last id asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Create new asset - param order_by = address" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, hostname, address, os_id, state, state_machine from vats_asset_asset where id = ${last_id_asset_1} + 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor DateTime" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

String string = &quot;${registry_datetime_db_1}&quot;;
//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + string);


DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;);
Date date = format.parse(string);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm&quot;);
javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + sdf.format(date));

//string = sdf.format(date);

//javax.swing.JOptionPane.showMessageDialog(null,&quot;time=&quot; + format.parse(string));


//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=${string}&quot;);

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">

//if (&quot;${__BeanShell(bsh.shared.hostname)}&quot; == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
if (bsh.shared.inputMap.get(&quot;hostname&quot;) == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.hostname)} con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot; con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;);
 print(FailureMessage);
}


if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-777862041">&quot;os&quot;:${os_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-22-Create new asset - param order_by = registry_date" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.order_by = new String(&quot;registry_date&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-22][Low]-Select last id asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Create new asset param order_by = registry_date" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, hostname, address, os_id, state, state_machine from vats_asset_asset where id = ${last_id_asset_1} + 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor DateTime" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

String string = &quot;${registry_datetime_db_1}&quot;;
//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + string);


DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;);
Date date = format.parse(string);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm&quot;);
javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + sdf.format(date));

//string = sdf.format(date);

//javax.swing.JOptionPane.showMessageDialog(null,&quot;time=&quot; + format.parse(string));


//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=${string}&quot;);

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">

//if (&quot;${__BeanShell(bsh.shared.hostname)}&quot; == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
if (bsh.shared.inputMap.get(&quot;hostname&quot;) == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.hostname)} con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot; con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;);
 print(FailureMessage);
}


if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-777862041">&quot;os&quot;:${os_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-23-Create new asset - param order_by = state_date" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.order_by = new String(&quot;state_date&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-23][Low]-Select last id asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Create new asset param order_by = state_date" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, hostname, address, os_id, state, state_machine from vats_asset_asset where id = ${last_id_asset_1} + 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor DateTime" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

String string = &quot;${registry_datetime_db_1}&quot;;
//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + string);


DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;);
Date date = format.parse(string);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm&quot;);
javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + sdf.format(date));

//string = sdf.format(date);

//javax.swing.JOptionPane.showMessageDialog(null,&quot;time=&quot; + format.parse(string));


//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=${string}&quot;);

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">

//if (&quot;${__BeanShell(bsh.shared.hostname)}&quot; == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
if (bsh.shared.inputMap.get(&quot;hostname&quot;) == bsh.shared.dbMap.get(&quot;hostname&quot;)) {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.info(bsh.shared.inputMap.get(&quot;hostname&quot;) + &quot; -------&gt; &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.hostname)} con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot; con el de base de datos: &quot; + bsh.shared.dbMap.get(&quot;hostname&quot;);
 print(FailureMessage);
}


if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-777862041">&quot;os&quot;:${os_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-24-Create new asset - without params" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[TC-24][Medium]-API Product Create new asset without params" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-518180603">error: peticion sin parametros</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-25-Create new asset - id param registered" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-25][Medium]-Select last id registered asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Create new asset with id param" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/${last_id_asset_1}/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-389879340">
Json response error
{&quot;detail&quot;: &quot;Method &quot;POST&quot; not allowed.&quot;}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[31-38]-Retrieve an asset" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-31-Retrieve an asset - asset exists" enabled="false"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate data for Asset" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;

bsh.shared.id = new Integer(${last_id_asset_1} + 1);
bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}-${__RandomString(4,abcdef)}-${__RandomString(4,abcdef)}-${__RandomString(4,abcdef)}-${__RandomString(12,abcdef)}&quot;);
bsh.shared.description = new String(&quot;Descripcion del asset&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = new String(&quot;Dominio del asset&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = new Integer(8888);
bsh.shared.os_id = new Integer(4);
bsh.shared.state = new Integer(3);
bsh.shared.state_machine = new Integer(3);
bsh.shared.registry_date = new  String(&quot;${__time(yyyy-MM-dd HH:mm:ss.SSSSSS)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(yyyy-MM-dd HH:mm:ss.SSSSSS)}&quot;);
//bsh.shared.has_agent = new Boolean(true);
bsh.shared.has_agent = new Integer(1);
bsh.shared.agent_version = new String(&quot;Version del agente&quot;);
bsh.shared.agent_os_system = new String(&quot;Sistema so del agente&quot;);
bsh.shared.agent_os_name = new String(&quot;Nombre so del agente&quot;);
bsh.shared.agent_os_version = new String(&quot;Version so del agente&quot;);
bsh.shared.agent_os_architecture = new String(&quot;Arquitectura so del agente&quot;);
//bsh.shared.physical = Boolean(false);
bsh.shared.physical = new Integer(1);
bsh.shared.parent_id = new Integer(1);
bsh.shared.parents = new String(&quot;Parents del asset&quot;);
//bsh.shared.alive = new Boolean(true);
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = new  String(&quot;${__time(yyyy-MM-dd HH:mm:ss.SSSSSS)}&quot;);
bsh.shared.update_state = new String(&quot;Done&quot;);
bsh.shared.checkins_left = new Integer(22);
bsh.shared.account_id = new String(&quot;Id de la cuenta&quot;);
bsh.shared.last_software_update = new  String(&quot;${__time(yyyy-MM-dd HH:mm:ss.SSSSSS)}&quot;);
bsh.shared.update_state_software = new String(&quot;Done&quot;);
bsh.shared.software_update_time  = new  String(&quot;${__time(yyyy-MM-dd HH:mm:ss.SSSSSS)}&quot;);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[TC-31][High]-Select last id registered asset " enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset
(`id`,
`aid`,
`description`,
`hostname`,
`domain`,
`address`,
`port`,
`os_id`,
`state`,
`state_machine`,
`registry_date`,
`state_date`,
`has_agent`,
`agent_version`,
`agent_os_system`,
`agent_os_name`,
`agent_os_version`,
`agent_os_architecture`,
`physical`,
`parent_id`,
`parents`,
`alive`,
`archive_date`,
`update_state`,
`checkins_left`,
`account_id`,
`last_software_update`,
`update_state_software`,
`software_update_time`)
values
(&quot;${__BeanShell(bsh.shared.id)}&quot;,
&quot;${__BeanShell(bsh.shared.aid)}&quot;,
&quot;${__BeanShell(bsh.shared.description)}&quot;,
&quot;${__BeanShell(bsh.shared.hostname)}&quot;,
&quot;${__BeanShell(bsh.shared.domain)}&quot;,
&quot;${__BeanShell(bsh.shared.address)}&quot;,
&quot;${__BeanShell(bsh.shared.port)}&quot;,
&quot;${__BeanShell(bsh.shared.os_id)}&quot;,
&quot;${__BeanShell(bsh.shared.state)}&quot;,
&quot;${__BeanShell(bsh.shared.state_machine)}&quot;,
&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,
&quot;${__BeanShell(bsh.shared.state_date)}&quot;,
&quot;${__BeanShell(bsh.shared.has_agent)}&quot;,
&quot;${__BeanShell(bsh.shared.agent_version)}&quot;,
&quot;${__BeanShell(bsh.shared.agent_os_system)}&quot;,
&quot;${__BeanShell(bsh.shared.agent_os_name)}&quot;,
&quot;${__BeanShell(bsh.shared.agent_os_version)}&quot;,
&quot;${__BeanShell(bsh.shared.agent_os_architecture)}&quot;,
&quot;${__BeanShell(bsh.shared.physical)}&quot;,
&quot;${__BeanShell(bsh.shared.parent_id)}&quot;,
&quot;${__BeanShell(bsh.shared.parents)}&quot;,
&quot;${__BeanShell(bsh.shared.alive)}&quot;,
&quot;${__BeanShell(bsh.shared.archive_date)}&quot;,
&quot;${__BeanShell(bsh.shared.update_state)}&quot;,
&quot;${__BeanShell(bsh.shared.checkins_left)}&quot;,
&quot;${__BeanShell(bsh.shared.account_id)}&quot;,
&quot;${__BeanShell(bsh.shared.last_software_update)}&quot;,
&quot;${__BeanShell(bsh.shared.update_state_software)}&quot;,
&quot;${__BeanShell(bsh.shared.software_update_time)}&quot;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="select cpe" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">select id, vendor, product, version, hw_target, short_name, cpe, parent_id from vats_asset_cpe;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">id, vendor, product, version, hw_target, short_name, cpe, parent_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve new inserted asset" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/${__BeanShell(bsh.shared.id)}/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, description, hostname, domain, address, port, state, state_machine, registry_date, state_date,
has_agent, agent_version, agent_os_system, agent_os_name, agent_os_version, agent_os_architecture, physical,
parents, alive, archive_date, update_state, checkins_left, account_id, last_software_update, software_update_time, update_state_software, os_id, parent_id
from vats_asset_asset
where id = ${last_id_asset_1} + 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, description_db, hostname_db, domain_db, address_db, port_db, state_db, state_machine_db, registry_date_db, state_date_db, has_agent_db, agent_version_db, agent_os_system_db, agent_os_name_db, agent_os_version_db, agent_os_architecture_db, physical_db, parents_db, alive_db, archive_date_db, update_state_db, checkins_left_db, account_id_db, last_software_update_db, software_update_time_db, update_state_software_db, os_id_db, parent_id_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor DateTime" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;

String string = &quot;${registry_datetime_db_1}&quot;;
//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + string);


DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;);
Date date = format.parse(string);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd hh:mm&quot;);
javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + sdf.format(date));

//string = sdf.format(date);

//javax.swing.JOptionPane.showMessageDialog(null,&quot;time=&quot; + format.parse(string));


//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=${string}&quot;);

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">
if (&quot;${__BeanShell(bsh.shared.aid)}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;${__BeanShell(bsh.shared.aid)} -------&gt;  ${aid_db_1}&quot;);
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.aid)} con el de base de datos: &quot; + &quot;${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;aid&quot;: ${__BeanShell(bsh.shared.aid)} con el de base de datos: &quot; + &quot;${aid_db_1}&quot;;
 print(FailureMessage);
}


if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2002903859">&quot;id&quot;:${__BeanShell(bsh.shared.id)}</stringProp>
                  <stringProp name="-1398580299">&quot;aid&quot;:&quot;${__BeanShell(bsh.shared.aid)}&quot;</stringProp>
                  <stringProp name="-1916337483">&quot;description&quot;:&quot;${__BeanShell(bsh.shared.description)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-751015667">&quot;port&quot;:${__BeanShell(bsh.shared.port)}</stringProp>
                  <stringProp name="1909953045">&quot;os&quot;:${__BeanShell(bsh.shared.os_id)}</stringProp>
                  <stringProp name="-182672171">&quot;state&quot;:&quot;${__BeanShell(bsh.shared.state)}&quot;</stringProp>
                  <stringProp name="-1893677611">&quot;state_machine&quot;:&quot;${__BeanShell(bsh.shared.state_machine)}&quot;</stringProp>
                  <stringProp name="561380341">&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;</stringProp>
                  <stringProp name="-580652917">&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;</stringProp>
                  <stringProp name="1842298997">&quot;has_agent&quot;:&quot;${__BeanShell(bsh.shared.has_agent)}&quot;</stringProp>
                  <stringProp name="699889717">&quot;agent_version&quot;:&quot;${__BeanShell(bsh.shared.agent_version)}&quot;</stringProp>
                  <stringProp name="607449781">&quot;agent_os_system&quot;:&quot;${__BeanShell(bsh.shared.agent_os_system)}&quot;</stringProp>
                  <stringProp name="-2091027339">&quot;agent_os_name&quot;:&quot;${__BeanShell(bsh.shared.agent_os_name)}&quot;</stringProp>
                  <stringProp name="832504661">&quot;agent_os_version&quot;:&quot;${__BeanShell(bsh.shared.agent_os_version)}&quot;</stringProp>
                  <stringProp name="-852284811">&quot;agent_os_architecture&quot;:&quot;${__BeanShell(bsh.shared.agent_os_architecture)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="6011087">&quot;os&quot;:${os_id_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Codigo de respuesta 404 es el esperado&quot;);
 SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Codigo de respuesta: [&quot; + ResponseCode + &quot;] no deseado&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-32-Retrieve an asset - asset removed" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-32]-Generate data for Asset" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 3, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Remove last asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from vats_asset_asset from id = {last_id_asset_1};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">id, vendor, product, version, hw_target, short_name, cpe, parent_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset removed" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880541577">error, el asseto no existe</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-33-Retrieve an asset - asset state online" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-33]-Generate data for Asset state online" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 1, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and online" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-34-Retrieve an asset - asset state offline" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-34]-Generate data for Asset state offline" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and offline" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-35-Retrieve an asset - asset state unknown" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-35]-Generate data for Asset state unknown" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and unknown" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-36-Retrieve an asset - asset alive" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-36]-Generate data for asset alive" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and alive" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-37-Retrieve an asset - asset not alive" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-37]-Generate data for asset not alive" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 0, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and not alive" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-38-Retrieve an asset - asset change cpe" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-38]-Generate data for asset" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);

bsh.shared.aid = new String(&quot;${__RandomString(8,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+
&quot;${__RandomString(4,abcdef)}&quot;+&quot;-&quot;+&quot;${__RandomString(12,abcdef)}&quot;);


/*
bsh.shared.id = new Integer(1);
bsh.shared.aid = new String(&quot;${__RandomString(2,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;+${__Random(10000,99999)});
bsh.shared.description = new String(&quot;description del jaleo&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.domain = null
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.port = null
bsh.shared.os_id = new Integer(1);
bsh.shared.state = new Integer(1);
bsh.shared.state_machine = new Integer(1);
bsh.shared.registry_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.has_agent = null
bsh.shared.agent_version = null
bsh.shared.agent_os_system = null
bsh.shared.agent_os_name = null
bsh.shared.agent_os_version = null
bsh.shared.agent_os_architecture = null
bsh.shared.physical = null
bsh.shared.parent_id = null
bsh.shared.parents = null
bsh.shared.alive = new Integer(1);
bsh.shared.archive_date = null
bsh.shared.update_state = null
bsh.shared.checkins_left = null
bsh.shared.account_id = null
bsh.shared.last_software_update = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.update_state_software = null
bsh.shared.software_update_time = new  String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 0, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and not alive" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Modify asset change cpe" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update set os_id from vats_asset_asset where id = {last_id_asset_1}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product retrieve asset exists and not alive" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1149398955">&quot;id&quot;: &quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="-237947485">&quot;aid&quot;: &quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1910242949">&quot;hostname&quot;: &quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="890572323">&quot;address&quot;: &quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-271196455">&quot;os&quot;: &quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1131962101">&quot;os_str&quot;: &quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="2025421443">&quot;state&quot;: &quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1509373379">&quot;state_str&quot;: &quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1173883267">&quot;state_machine&quot;: &quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1582469437">&quot;state_machine_str&quot;: &quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="917436961">&quot;id&quot;: &quot;${id_res_1}&quot;</stringProp>
                  <stringProp name="-1759804161">&quot;aid&quot;: &quot;${id_res_2}&quot;</stringProp>
                  <stringProp name="-66559236">&quot;hostname&quot;: &quot;${id_res_4}&quot;</stringProp>
                  <stringProp name="-1527003205">&quot;address&quot;: &quot;${id_res_6}&quot;</stringProp>
                  <stringProp name="-1945214159">&quot;os&quot;: &quot;${id_res_8}&quot;</stringProp>
                  <stringProp name="-243401372">&quot;os_str&quot;: &quot;${id_res_9}&quot;</stringProp>
                  <stringProp name="954169703">&quot;state&quot;: &quot;${id_res_10}&quot;</stringProp>
                  <stringProp name="-1316069002">&quot;state_str&quot;: &quot;${id_res_11}&quot;</stringProp>
                  <stringProp name="9455073">&quot;state_machine&quot;: &quot;${id_res_12}&quot;</stringProp>
                  <stringProp name="-119279120">&quot;state_machine_str&quot;: &quot;${id_res_13}&quot;</stringProp>
                  <stringProp name="916092126">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;</stringProp>
                  <stringProp name="-715301041">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[39-62]-Update an asset" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-39-Update an asset - all parameters right" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-39]-Generate data for Asset all parameters right" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(2);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update asset all parameters right" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-40-Update an asset - param limit wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-40]-Generate data for Asset param limit wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new String(&quot;a&quot;);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param limit wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-41-Update an asset - param page wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-41]-Generate data for Asset param page wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new String(&quot;a&quot;);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param page wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-42-Update an asset - param order_by wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-42]-Generate data for Asset param order_by wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new Integer(2);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param order_by wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-43-Update an asset - some param of query wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-43]-Generate data for Asset some param of query wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new Boolean(true);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset some param of query wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-44-Update an asset - param cpe wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-44]-Generate data for Asset param cpe wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Boolean(false);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param cpe wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-45-Update an asset - param tag wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-45]-Generate data for Asset param tag wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Boolean(true);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param tag wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-46-Update an asset - param network wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-46]-Generate data for Asset param network wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Boolean(false);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param network wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-47-Update an asset - param alive wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-47]-Generate data for Asset param alive wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new String(&quot;Hasta_luego&quot;);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param alive wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-48-Update an asset - param with_tags wrong" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-48]-Generate data for Asset param with_tags wrong" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new String(&quot;Helloooowww&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param with_tags wrong" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-49-Update an asset - without param limit" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-49]-Generate data for Asset without param limit" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

//bsh.shared.limit = new Integer(20);
bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update asset without param limit" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-50-Update an asset - without param page" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-50]-Generate data for Asset without param page" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
//bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param page" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-51-Update an asset - without param order_by" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-51]-Generate data for Asset without param order_by" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
//bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param order_by" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-52-Update an asset - without any param of query" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-52]-Generate data for Asset without any param of query" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
//bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
//bsh.shared.address = new String(&quot;127.0.1.1&quot;);
//bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
//bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
//bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without any param of query" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-53-Update an asset - without param cpe" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-53]-Generate data for Asset without param cpe" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
//bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param cpe" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-54-Update an asset - without param tag" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-54]-Generate data for Asset without param tag" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
//bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param tag" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-55-Update an asset - without param network" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-55]-Generate data for Asset without param network" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
//bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param network" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-56-Update an asset - without param alive" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-56]-Generate data for Asset without param alive" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
//bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param alive" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-57-Update an asset - without param with_tags" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-57]-Generate data for Asset without param with_tags" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(1);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
//bsh.shared.with_tags = new Boolean(false);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without param with_tags" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-58-Update an asset - param order_by = hostname" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-58]-Generate data for Asset param order_by = hostname" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param order_by = hostname" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-59-Update an asset - param order_by = address" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-59]-Generate data for Asset param order_by = address" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;address&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param order_by = address" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-60-Update an asset - param order_by = registry_date" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-60]-Generate data for Asset param order_by = registry_date" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;registry_date&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param order_by = registry_date" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-61-Update an asset - param order_by = state_date" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-61]-Generate data for Asset param order_by = state_date" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;state_date&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset param order_by = state_date" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;limit&quot;:&quot;${__BeanShell(bsh.shared.limit)}&quot;,&quot;page&quot;:&quot;${__BeanShell(bsh.shared.page)}&quot;,&quot;order_by&quot;:&quot;${__BeanShell(bsh.shared.order_by)}&quot;,&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;,&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;,&quot;registry_date&quot;:&quot;${__BeanShell(bsh.shared.registry_date)}&quot;,&quot;state_date&quot;:&quot;${__BeanShell(bsh.shared.state_date)}&quot;,&quot;so&quot;:&quot;${__BeanShell(bsh.shared.so)}&quot;,&quot;cpe&quot;:&quot;${__BeanShell(bsh.shared.cpe)}&quot;,&quot;tag&quot;:&quot;${__BeanShell(bsh.shared.tag)}&quot;,&quot;network&quot;:&quot;${__BeanShell(bsh.shared.network)}&quot;,&quot;alive&quot;:&quot;${__BeanShell(bsh.shared.alive)}&quot;,&quot;with_tags&quot;:&quot;${__BeanShell(bsh.shared.with_tags)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-62-Update an asset - without params" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-62]-Generate data for Asset without params" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

/*
bsh.shared.limit = new Integer(20);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;state_date&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.com&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(false);
bsh.shared.with_tags = new Boolean(true);
*/</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product Update an asset without params" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/91/</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_str_db, state_machine_db, registry_datetime_str_db, state_datetime_str_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[64-82]-Remove an assets" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-64-Remove an assets - asset exists" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-64]-Generate data for Asset" enabled="false">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Remove assets" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">25</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">113</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_Vats_assets_new_assets_body_data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/assets/${counter}/</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
                </JDBCPostProcessor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                  <stringProp name="JSON_PATH">$.id</stringProp>
                  <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                    <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                    <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                    <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                    <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                    <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                    <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                    <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                    <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                    <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                    <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                    <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="96784904">error</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                    <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                  <stringProp name="VAR">id_res</stringProp>
                  <stringProp name="JSONPATH">$.*</stringProp>
                  <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                  <stringProp name="VARIABLE"></stringProp>
                  <stringProp name="SUBJECT">BODY</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                    <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                    <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                    <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                    <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                    <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                    <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                    <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                    <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                    <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                    <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                    <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                    <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                    <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                    <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                    <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                    <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                    <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                    <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                    <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                    <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                    <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                    <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                  <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered assets with assets" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1508422367">{&quot;count&quot;: 0, &quot;next&quot;: null, &quot;previous&quot;: null, &quot;results&quot;: [], &quot;count_results&quot;: 0, &quot;first&quot;: null, &quot;last&quot;: null}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[83-101]-Archive an assets" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-83-Archive an assets - asset exists" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-83]-Generate data for Asset" enabled="false">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Remove assets" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">25</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">113</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_Vats_assets_new_assets_body_data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/assets/${counter}/</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
                </JDBCPostProcessor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                  <stringProp name="JSON_PATH">$.id</stringProp>
                  <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                    <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                    <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                    <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                    <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                    <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                    <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                    <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                    <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                    <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                    <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                    <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="96784904">error</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                    <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                  <stringProp name="VAR">id_res</stringProp>
                  <stringProp name="JSONPATH">$.*</stringProp>
                  <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                  <stringProp name="VARIABLE"></stringProp>
                  <stringProp name="SUBJECT">BODY</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                    <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                    <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                    <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                    <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                    <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                    <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                    <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                    <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                    <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                    <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                    <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                    <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                    <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                    <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                    <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                    <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                    <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                    <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                    <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                    <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                    <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                    <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                  <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered assets with assets" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1508422367">{&quot;count&quot;: 0, &quot;next&quot;: null, &quot;previous&quot;: null, &quot;results&quot;: [], &quot;count_results&quot;: 0, &quot;first&quot;: null, &quot;last&quot;: null}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[106-110]-LIst registered assets" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-106-LIst registered assets" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-106][Medium]-LIst registered assets less than 10 assets" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - Count assets" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select count(*) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">number_assets</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - Last id assets" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_asset;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - Last id assetshistory" enabled="true">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_asset_assethistory;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_assethistory</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop - Remove assets" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${number_assets_1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">${last_id_asset_1}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">-1</stringProp>
                <stringProp name="CounterConfig.name">counter_id_remove_asset</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - remove asset history ${counter_id_remove_asset}" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">
delete from vats_asset_assethistory where asset_id = ${counter_id_remove_asset};
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - remove assets ${counter_id_remove_asset}" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">
delete from vats_asset_asset where id = ${counter_id_remove_asset};</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller Add 9 assets" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">9</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter add asset" enabled="true">
                <stringProp name="CounterConfig.start">${last_id_asset_1}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter_id_add_asset</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter add assethistory" enabled="true">
                <stringProp name="CounterConfig.start">${last_id_assethistory_1}</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter_id_add_assethistory</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${counter_id_add_asset} == ${last_id_asset_1} +4</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - add assets ${counter_id_add_asset}" enabled="true">
                  <stringProp name="dataSource">product_db</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">
insert into vats_asset_asset
(`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`)
values
(${counter_id_add_asset}, &quot;aaaaaaaa-7d02-42aa-b2d2-3011ba4${counter_id_add_asset}&quot;, null, &quot;http://www.mihostname.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 3, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - add asset history ${counter_id_add_assethistory}" enabled="true">
                  <stringProp name="dataSource">product_db</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">
INSERT INTO vats_asset_assethistory
(`id`,`aid`,`description`,`hostname`,`domain`,`address`,`port`,`state`,`state_machine`,`registry_date`,`state_date`,`has_agent`,`agent_version`,`asset_id`,`os_id`)
VALUES
(${counter_id_add_assethistory},&quot;aaaaaaaa-7d02-42aa-b2d2-3011ba4${counter_id_add_assethistory}&quot;, null, &quot;http://www.mihostname.com&quot;, null, &quot;127.0.1.1&quot;,null,3, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;,0, null,${counter_id_add_asset},2);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - add assets ${counter_id_add_asset}" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">
insert into vats_asset_asset
(`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`)
values
(${counter_id_add_asset}, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4${counter_id_add_asset}&quot;, null, &quot;http://www.mihostname.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 3, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request - add asset history ${counter_id_add_assethistory}" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">
INSERT INTO vats_asset_assethistory
(`id`,`aid`,`description`,`hostname`,`domain`,`address`,`port`,`state`,`state_machine`,`registry_date`,`state_date`,`has_agent`,`agent_version`,`asset_id`,`os_id`)
VALUES
(${counter_id_add_assethistory},&quot;3dc8dcae-7d02-42aa-b2d2-3011ba4${counter_id_add_assethistory}&quot;, null, &quot;http://www.mihostname.com&quot;, null, &quot;127.0.1.1&quot;,null,3, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;,0, null,${counter_id_add_asset},2);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered assets with assets" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1508422367">{&quot;count&quot;: 0, &quot;next&quot;: null, &quot;previous&quot;: null, &quot;results&quot;: [], &quot;count_results&quot;: 0, &quot;first&quot;: null, &quot;last&quot;: null}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="true">
                <stringProp name="dataSource">product_db</stringProp>
                <stringProp name="query">select id, aid, hostname, address, os_id, state, state_machine from vats_asset_asset</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">db_result</stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
ArrayList db_result_al = vars.getObject(&quot;db_result&quot;);

//javax.swing.JOptionPane.showMessageDialog(null, &quot;time=&quot; + db_result_al.get(0));



 /*
bsh.shared.dbMap.put(&quot;hostname&quot;, &quot;${hostname_db_1}&quot;);

bsh.shared.inputMap.put(&quot;hostname&quot;, &quot;http://www.minabis.com&quot;);


*/


for (HashMap row : db_result_al) {
	Iterator it = row.entrySet().iterator();
	while (it.hasNext()){
		Map.Entry pair = (Map.Entry)it.next();
		bsh.shared.dbMap.put(String.valueOf(pair.getKey()), String.valueOf(pair.getValue()));

		//javax.swing.JOptionPane.showMessageDialog(null, pair.getKey() + &quot; = &quot; + pair.getValue());
		//log.info(pair.getKey() + &quot; = &quot; + pair.getValue());
	}
}


//javax.swing.JOptionPane.showMessageDialog(null, &quot;hostname=&quot; + bsh.shared.dbMap.get(&quot;hostname&quot;));

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion Input Values vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">
if (&quot;${__BeanShell(bsh.shared.address)}&quot; == &quot;${address_db_1}&quot;) {
 log.info(&quot;Los valores introducidos son los mismos que en base de datos&quot;);
 SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${__BeanShell(bsh.shared.address)} con el de base de datos: ${address_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor introducido para &quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot; con el de base de datos: &quot;${address_db_1}&quot;&quot;;
 print(FailureMessage);
}



/*
import tools.RodriFunctions;

RodriFunctions rf = new RodriFunctions();

rf.compare (&quot;${__BeanShell(bsh.shared.hostname)}&quot;, &quot;${hostname_db_1}1&quot;, &quot;hostname&quot;);
rf.compare (&quot;${__BeanShell(bsh.shared.cpe)}&quot;, &quot;3&quot;, &quot;cpe&quot;);
*/</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion json elements vs DB" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (&quot;${id_res_1}&quot; == &quot;${id_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor del json de resupesta: ${id_res_1} con el de base de datos: ${id_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_1)}&quot; devuelto por el json; con el de base de datos: &quot;${id_db_1}&quot;&quot;;
 print(FailureMessage);
}

if (&quot;${id_res_2}&quot; == &quot;${aid_db_1}&quot;) {
 log.info(&quot;Los valores devueltos en el json no son los mismos que en base de datos&quot;);
// SampleResult.setSuccessful(true);
}else {
 log.warn(&quot;No coincide el valor introducido: ${id_res_2)} con el de base de datos: ${aid_db_1}&quot;);
 SampleResult.setSuccessful(false);
 Failure=true;
 FailureMessage= &quot;No coincide el valor de &quot;id&quot;: &quot;${id_res_2)}&quot; devuelto por el json; con el de base de datos: &quot;${aid_db_!}&quot;&quot;;
 print(FailureMessage);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1451843125">&quot;address&quot;:&quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="-1241294883">&quot;hostname&quot;:&quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json vs DB without dates" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="66986773">&quot;id&quot;:${id_db_1}</stringProp>
                  <stringProp name="-1414092001">&quot;aid&quot;:&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-977093611">&quot;hostname&quot;:&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1291952337">&quot;address&quot;:&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-777862041">&quot;os&quot;:${os_db_1}</stringProp>
                  <stringProp name="-1530263423">&quot;state&quot;:${state_db_1}</stringProp>
                  <stringProp name="-1692248703">&quot;state_machine&quot;:${state_machine_db_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-106-List registered assets less than 10 assets" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-106]-Generate data for Asset less than 10 assets" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select count of assets" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asset_counter</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If asset number is 0" enabled="true">
              <stringProp name="IfController.condition">${asset_counter} == &quot;0&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Insert assets to asset number will be 9" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${asset_counter} + 9</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If asset number is more than 10" enabled="true">
              <stringProp name="IfController.condition">${asset_counter} &gt; &quot;10&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Remove assets to assets number will be 9" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${asset_counter}-9</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
                  <stringProp name="dataSource">product_db</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">last_id_asset</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Remove asset" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">delete from vats_asset_asset where id = {last_id_asset_1}



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_Vats_assets_new_assets_body_data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-107-LIst registered assets more than 10 assets" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-107]-Generate data for Asset more than 10 assets" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select count of assets" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asset_counter</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If asset number is less than 10" enabled="true">
              <stringProp name="IfController.condition">${asset_counter} &lt; &quot;10&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Insert assets to assets number will be more than 10" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${asset_counter} + 22</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_Vats_assets_new_assets_body_data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-108-LIst registered assets – after asset update" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-108]-Generate data for Asset " enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select count of assets" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asset_counter</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If asset number is less than 10" enabled="true">
              <stringProp name="IfController.condition">${asset_counter} &lt; &quot;10&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Insert assets to assets number will be more than 10" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${asset_counter} + 22</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select cpe" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">select id, vendor, product, version, hw_target, short_name, cpe, parent_id from vats_asset_cpe;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">id, vendor, product, version, hw_target, short_name, cpe, parent_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Modify asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update set os_id = 5 from vats_asset_asset where id = {last_id_asset_1}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered after modify asset" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-109-LIst registered assets – after asset remove" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-109]-Generate data for Asset " enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select count of assets" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asset_counter</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If asset number is less than 10" enabled="true">
              <stringProp name="IfController.condition">${asset_counter} &lt; &quot;10&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Insert assets to assets number will be more than 10" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${asset_counter} + 22</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Remove asset" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from vats_asset_asset where id = {last_id_asset_1} - 2</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered after remove asset" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TestCase-110-LIst registered assets – after asset archive" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="[TC-110]-Generate data for Asset " enabled="true">
              <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;

bsh.shared.limit = new Integer(15);
bsh.shared.page = new Integer(1);
bsh.shared.order_by = new String(&quot;hostname&quot;);
bsh.shared.hostname = new String(&quot;http://www.minabis.es&quot;);
bsh.shared.address = new String(&quot;127.0.1.1&quot;);
bsh.shared.registry_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.state_date = new String(&quot;${__time(dd-MM-yyyy hh:mm)}&quot;);
bsh.shared.so = new String(&quot;2&quot;);
bsh.shared.cpe = new Integer(1);
bsh.shared.tag = new Integer(20);
bsh.shared.network = new Integer(1);
bsh.shared.alive = new Boolean(true);
bsh.shared.with_tags = new Boolean(true);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select count of assets" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asset_counter</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If asset number is less than 10" enabled="true">
              <stringProp name="IfController.condition">${asset_counter} &lt; &quot;10&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Insert assets to assets number will be more than 10" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${asset_counter} + 22</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert asset" enabled="false">
                  <stringProp name="dataSource"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">insert into vats_asset_asset (`id`, `aid`, `description`, `hostname`, `domain`, `address`, `port`, `os_id`, `state`, `state_machine`, `registry_date`, `state_date`, `has_agent`, `agent_version`, `agent_os_system`, `agent_os_name`, `agent_os_version`, `agent_os_architecture`, `physical`, `parent_id`, `parents`, `alive`, `archive_date`, `update_state`, `checkins_left`, `account_id`, `last_software_update`, `update_state_software`, `software_update_time`) values (145, &quot;3dc8dcae-7d02-42aa-b2d2-3011ba4bf3f7&quot;, null, &quot;http://www.minabis.com&quot;, null, &quot;127.0.1.1&quot;, null, 2, 2, 3, &quot;2017-02-14 10:32:54&quot;, &quot;2017-02-14 10:32:54&quot;, 0, null, null, null, null, null, 0, null, null, 1, null, &quot;na&quot;, 3, null, &quot;2017-02-14 09:02:55&quot;, null, &quot;2017-02-14 09:02:55&quot;);



</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select last id asset" enabled="false">
              <stringProp name="dataSource">product_db</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select max(id) from vats_assets_assets; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">last_id_asset</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Archive asset - Modify alive field" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update vats_asset_asset set alive = null where id = {last_id_asset_1} - 2</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Product list registered after remove asset" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.proxyHost">{&quot;route&quot;:&quot;/reports/&quot;,&quot;action&quot;:&quot;exitView&quot;,&quot;value&quot;:&quot;&quot;}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/assets/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor extraer valores db" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="query">/*
select id, aid, hostname, address, os_id, state, state_str, state_machine, registry_datetime_str, state_datetime_str from vats_assets_assets where id = ${last_id_asset_1} + 1;
*/

select id, aid, hostname, address, os_id, state, state_machine, registry_date, state_date from vats_assets_assets where id = ${last_id_asset_1} + 1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">id_db, aid_db, hostname_db, address_db, os_db, state_db, state_machine_db, registry_datetime_db, state_datetime_db</stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON Path Assertion" enabled="false">
                <stringProp name="JSON_PATH">$.id</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_id_asset_1}+1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="880633112">&quot;id&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="1364199420">&quot;aid&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="784458072">&quot;hostname&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="11797900">&quot;address&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="1368395064">&quot;os&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1492487032">&quot;os_str&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="996659922">&quot;state&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-1696514194">&quot;state_str&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="550739394">&quot;state_machine&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-1213618082">&quot;state_machine_str&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-1491638378">&quot;registry_datetime_str&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1570253592">&quot;state_datetime_str&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion vs input values" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-962051391">&quot;address&quot;: &quot;${__BeanShell(bsh.shared.address)}&quot;</stringProp>
                  <stringProp name="289758391">&quot;hostname&quot;: &quot;${__BeanShell(bsh.shared.hostname)}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="false">
                <stringProp name="VAR">id_res</stringProp>
                <stringProp name="JSONPATH">$.*</stringProp>
                <stringProp name="DEFAULT">NOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-636201431">&quot;id&quot;=&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="960505292">&quot;aid&quot;=&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="-1937733754">&quot;hostname&quot;=&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="1351136096">&quot;address&quot;=&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="77073314">&quot;os&quot;=&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="1821035457">&quot;os_str&quot;=&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="-389343305">&quot;state&quot;=&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="-474676552">&quot;state_str&quot;=&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="-1027004871">&quot;state_machine&quot;=&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="727767354">&quot;state_machine_str&quot;=&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="-507424769">&quot;registry_datetime_str&quot;=&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="1425270734">&quot;state_datetime_str&quot;=&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Json elements vs DB" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84811345">&quot;${id_res_1}&quot;=&quot;${id_db_1}&quot;</stringProp>
                  <stringProp name="855159457">&quot;${id_res_2}&quot;=&quot;${aid_db_1}&quot;</stringProp>
                  <stringProp name="2000120342">&quot;${id_res_4}&quot;=&quot;${hostname_db_1}&quot;</stringProp>
                  <stringProp name="-1479665043">&quot;${id_res_6}&quot;=&quot;${address_db_1}&quot;</stringProp>
                  <stringProp name="-1076401535">&quot;${id_res_8}&quot;=&quot;${os_db_1}&quot;</stringProp>
                  <stringProp name="-1912000338">&quot;${id_res_9}&quot;=&quot;${os_str_db_1}&quot;</stringProp>
                  <stringProp name="407230189">&quot;${id_res_10}&quot;=&quot;${state_db_1}&quot;</stringProp>
                  <stringProp name="1508067836">&quot;${id_res_11}&quot;=&quot;${state_str_db_1}&quot;</stringProp>
                  <stringProp name="1213148007">&quot;${id_res_12}&quot;=&quot;${state_machine_db_1}&quot;</stringProp>
                  <stringProp name="-829357962">&quot;${id_res_13}&quot;=&quot;${state_machine_str_db_1}&quot;</stringProp>
                  <stringProp name="1049354135">&quot;${id_res_18}&quot;=&quot;${registry_datetime_str_db_1}&quot;</stringProp>
                  <stringProp name="148924390">&quot;${id_res_19}&quot;=&quot;${state_datetime_str_db_1}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
                <stringProp name="BeanShellAssertion.query">if (ResponseCode.equals(&quot;404&quot;)) {
 log.info(&quot;Treating HTTP 404 as success&quot;);
 // We want to treat this code as SUCCESS instead of FAILURE
     SampleResult.setSuccessful(true);
}else if(!ResponseCode.equals(&quot;200&quot;)){
 log.warn(&quot;Got unwanted HTTP status: [&quot; + ResponseCode + &quot;]&quot;);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
